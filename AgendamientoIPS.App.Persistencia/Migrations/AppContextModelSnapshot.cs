// <auto-generated />
using System;
using AgendamientoIPS.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgendamientoIPS.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int?>("IdMedicoId")
                        .HasColumnType("int");

                    b.Property<int?>("IdPacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("IdSedeId")
                        .HasColumnType("int");

                    b.Property<int>("NumCita")
                        .HasColumnType("int");

                    b.Property<int>("TipoCita")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMedicoId");

                    b.HasIndex("IdPacienteId");

                    b.HasIndex("IdSedeId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Convenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<int>("EPS")
                        .HasColumnType("int");

                    b.Property<string>("NumConvenio")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("Convenios");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Encuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AntecedentesMedicos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MotivoConsulta")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Encuestas");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CitaId")
                        .HasColumnType("int");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormadePago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IdConvenioId")
                        .HasColumnType("int");

                    b.Property<int>("NumFactura")
                        .HasColumnType("int");

                    b.Property<int>("TarifaAplicada")
                        .HasColumnType("int");

                    b.Property<int>("ValorPagado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("IdConvenioId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EPS")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Ciudad")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HorarioAtencion")
                        .HasColumnType("int");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("NombreSede")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Medico", b =>
                {
                    b.HasBaseType("AgendamientoIPS.App.Dominio.Persona");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TarjetaProfesional")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Paciente", b =>
                {
                    b.HasBaseType("AgendamientoIPS.App.Dominio.Persona");

                    b.Property<int?>("EncuestaId")
                        .HasColumnType("int");

                    b.HasIndex("EncuestaId");

                    b.HasDiscriminator().HasValue("Paciente");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Cita", b =>
                {
                    b.HasOne("AgendamientoIPS.App.Dominio.Medico", "IdMedico")
                        .WithMany()
                        .HasForeignKey("IdMedicoId");

                    b.HasOne("AgendamientoIPS.App.Dominio.Paciente", "IdPaciente")
                        .WithMany()
                        .HasForeignKey("IdPacienteId");

                    b.HasOne("AgendamientoIPS.App.Dominio.Sede", "IdSede")
                        .WithMany()
                        .HasForeignKey("IdSedeId");

                    b.Navigation("IdMedico");

                    b.Navigation("IdPaciente");

                    b.Navigation("IdSede");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Factura", b =>
                {
                    b.HasOne("AgendamientoIPS.App.Dominio.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId");

                    b.HasOne("AgendamientoIPS.App.Dominio.Convenio", "IdConvenio")
                        .WithMany()
                        .HasForeignKey("IdConvenioId");

                    b.Navigation("Cita");

                    b.Navigation("IdConvenio");
                });

            modelBuilder.Entity("AgendamientoIPS.App.Dominio.Paciente", b =>
                {
                    b.HasOne("AgendamientoIPS.App.Dominio.Encuesta", "Encuesta")
                        .WithMany()
                        .HasForeignKey("EncuestaId");

                    b.Navigation("Encuesta");
                });
#pragma warning restore 612, 618
        }
    }
}
